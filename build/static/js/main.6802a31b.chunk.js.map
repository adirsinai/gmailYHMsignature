{"version":3,"sources":["assets/Logo-removebg-preview.png","Signature.tsx","CircularProgressWithLabel.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Signature","props","cellPadding","cellSpacing","className","rowSpan","src","alt","fullName","colSpan","position","phone","email","website","CircularProgressWithLabel","Box","display","CircularProgress","variant","top","left","bottom","right","alignItems","justifyContent","Typography","component","color","Math","round","value","useStyles","makeStyles","theme","createStyles","root","margin","spacing","paper","padding","textAlign","palette","text","secondary","centeredImage","marginLeft","marginRight","width","height","centeredText","warningIconStyle","verticalAlign","initialState","photo","withPhoto","copied","App","classes","React","useState","state","setState","handleChange","event","target","name","prevState","checked","copyToClipboard","copyText","document","querySelector","range","createRange","selectNode","windowSelection","window","getSelection","removeAllRanges","addRange","successful","execCommand","console","log","err","photoUrlMaxLength","Container","Logo","gutterBottom","Grid","container","item","xs","Paper","noValidate","autoComplete","TextField","fullWidth","required","label","onChange","autoFocus","FormControlLabel","control","Switch","error","length","helperText","Button","disabled","JSON","stringify","onClick","progress","Fragment","endIcon","CheckOutlined","FileCopyOutlined","Object","entries","forEach","key","includes","enoughData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6802a31b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Logo-removebg-preview.e0d066a5.png\";","import { PhotoSignatureProps } from './App';\nimport Logo from './assets/Logo-removebg-preview.png';\n\nconst Signature = (props: PhotoSignatureProps) => {\n  return (\n    <table cellPadding={0} cellSpacing={0} className={'signature'}>\n      <tbody>\n        <tr>\n          <td rowSpan={5}>\n            <img\n              className={'main-image'}\n              src='https://dev.yhm.co.il/wp-content/uploads/2022/11/Logo-removebg-preview.png'\n              alt={''}\n            />\n          </td>\n          <td rowSpan={5}>\n            <div className={'vertical-line'} />\n          </td>\n          <td>{props.fullName}</td>\n        </tr>\n        <tr>\n          <td colSpan={3}>{props.position}</td>\n        </tr>\n        <tr>\n          <td colSpan={3}>Telephone: {props.phone}</td>\n        </tr>\n        <tr>\n          <td colSpan={3}>Email: {props.email}</td>\n        </tr>\n        <tr>\n          <td colSpan={3}>Website: {props.website}</td>\n        </tr>\n        <tr></tr>\n      </tbody>\n    </table>\n  );\n};\n\nexport default Signature;\n","import {Box, CircularProgress, CircularProgressProps, Typography,} from \"@material-ui/core\";\n\nexport default function CircularProgressWithLabel(\n    props: CircularProgressProps & { value: number }\n) {\n    return (\n        <Box position=\"relative\" display=\"inline-flex\">\n            <CircularProgress variant=\"determinate\" {...props} />\n            <Box\n                top={0}\n                left={0}\n                bottom={0}\n                right={0}\n                position=\"absolute\"\n                display=\"flex\"\n                alignItems=\"center\"\n                justifyContent=\"center\"\n            >\n                <Typography\n                    variant=\"caption\"\n                    component=\"div\"\n                    color=\"textSecondary\"\n                >{`${Math.round(props.value)}%`}</Typography>\n            </Box>\n        </Box>\n    );\n}\n","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport {\n  Button,\n  Container,\n  FormControlLabel,\n  Switch,\n  TextField,\n  Typography,\n} from '@material-ui/core';\nimport Logo from './assets/Logo-removebg-preview.png';\nimport Signature from './Signature';\nimport { CheckOutlined, FileCopyOutlined } from '@material-ui/icons';\nimport CircularProgressWithLabel from './CircularProgressWithLabel';\nimport './App.css';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n      },\n      '& .label-root': {\n        margin: theme.spacing(1),\n      },\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'left',\n      color: theme.palette.text.secondary,\n    },\n    centeredImage: {\n      display: 'block',\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      width: '350px',\n      height: '150px',\n    },\n    centeredText: {\n      textAlign: 'center',\n    },\n    warningIconStyle: {\n      textAlign: 'center',\n      color: '#FFDC00',\n      verticalAlign: 'middle',\n    },\n  })\n);\n\nexport interface PhotoSignatureProps {\n  fullName: string;\n  position: string;\n  email: string;\n  website: string;\n  phone: string;\n  photo: string;\n}\n\ninterface State extends PhotoSignatureProps {\n  withPhoto: boolean;\n  copied: boolean;\n}\n\nconst initialState: State = {\n  fullName: '',\n  position: '',\n  email: '',\n  website: 'www.yhm.co.il',\n  phone: '',\n  photo: 'Logo',\n  withPhoto: false,\n  copied: false,\n};\n\nfunction App() {\n  const classes = useStyles();\n  const [state, setState] = React.useState<State>(initialState);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.name === 'withPhoto') {\n      setState((prevState) => ({\n        ...prevState,\n        [event.target.name]: event.target.checked,\n      }));\n    } else {\n      setState((prevState) => ({\n        ...prevState,\n        [event.target.name]: event.target.value,\n      }));\n    }\n  };\n\n  const enoughData = () => {\n    let progress = 100;\n    if (state.withPhoto) {\n      if (\n        state.fullName &&\n        state.phone &&\n        state.position &&\n        state.email &&\n        state.website &&\n        state.photo\n      ) {\n        return (\n          <React.Fragment>\n            <Signature\n              fullName={state.fullName}\n              position={state.position}\n              email={state.email}\n              website={state.website}\n              phone={state.phone}\n              photo={state.photo}\n            />\n            <br />\n            <Button\n              disabled={state.photo.length > photoUrlMaxLength}\n              onClick={copyToClipboard}\n              endIcon={state.copied ? <CheckOutlined /> : <FileCopyOutlined />}\n            >\n              {state.copied ? 'Copied' : 'Copy to clipboard'}\n            </Button>\n          </React.Fragment>\n        );\n      } else {\n        Object.entries(state).forEach(([key, value]) => {\n          if (\n            [\n              'fullName',\n              'phone',\n              'website',\n              'position',\n              'email',\n              'photo',\n            ].includes(key)\n          ) {\n            if (value.length === 0) {\n              progress = progress - 20;\n            }\n          }\n        });\n      }\n    } else {\n      if (\n        state.fullName &&\n        state.phone &&\n        state.website &&\n        state.position &&\n        state.email\n      ) {\n        return (\n          <React.Fragment>\n            <Signature\n              fullName={state.fullName}\n              position={state.position}\n              email={state.email}\n              website={state.website}\n              phone={state.phone}\n              photo={state.photo}\n            />\n            <br />\n            <Button\n              onClick={copyToClipboard}\n              endIcon={state.copied ? <CheckOutlined /> : <FileCopyOutlined />}\n            >\n              {state.copied ? 'Copied' : 'Copy to clipboard'}\n            </Button>\n          </React.Fragment>\n        );\n      } else {\n        Object.entries(state).forEach(([key, value]) => {\n          if (\n            ['fullName', 'phone', 'website', 'position', 'email'].includes(key)\n          ) {\n            if (value.length === 0) {\n              progress = progress - 25;\n            }\n          }\n        });\n      }\n    }\n    if (progress > 0) {\n      return (\n        <div className={classes.centeredText}>\n          <CircularProgressWithLabel variant='determinate' value={progress} />\n        </div>\n      );\n    } else {\n      return <div>Please, input your data</div>;\n    }\n  };\n\n  const copyToClipboard = () => {\n    let copyText = document.querySelector('.signature');\n    const range = document.createRange();\n    if (copyText) {\n      range.selectNode(copyText);\n    }\n    const windowSelection = window.getSelection();\n    if (windowSelection) {\n      windowSelection.removeAllRanges();\n      windowSelection.addRange(range);\n    }\n    try {\n      let successful = document.execCommand('copy');\n      console.log(successful ? 'Success' : 'Fail');\n      setState((prevState) => ({\n        ...prevState,\n        copied: true,\n      }));\n    } catch (err) {\n      console.log('Fail');\n    }\n  };\n\n  const isStateChanged = () => {\n    return JSON.stringify(state) === JSON.stringify(initialState);\n  };\n\n  const clearState = () => {\n    setState(initialState);\n  };\n\n  const photoUrlMaxLength = 1000;\n\n  return (\n    <Container>\n      <img className={classes.centeredImage} src={Logo} alt={'logo'} />\n      <Typography variant='h2' gutterBottom className={classes.centeredText}>\n        Signature generator\n      </Typography>\n      <Typography\n        variant='subtitle1'\n        gutterBottom\n        className={classes.centeredText}\n      >\n        YHM Gmail\n      </Typography>\n      <Grid container spacing={3}>\n        <Grid item xs={6}>\n          <Paper className={classes.paper}>\n            <form className={classes.root} noValidate autoComplete='off'>\n              <TextField\n                fullWidth={true}\n                required\n                label='Full Name'\n                value={state.fullName}\n                name={'fullName'}\n                onChange={handleChange}\n                autoFocus={true}\n              />\n              <TextField\n                fullWidth={true}\n                required\n                label='Position'\n                value={state.position}\n                name={'position'}\n                onChange={handleChange}\n              />\n              <TextField\n                fullWidth={true}\n                required\n                label='email'\n                value={state.email}\n                name={'email'}\n                onChange={handleChange}\n              />\n              <TextField\n                fullWidth={true}\n                required\n                label='website'\n                value={state.website}\n                name={'email'}\n                onChange={handleChange}\n              />\n              <TextField\n                fullWidth={true}\n                required\n                label='Telephone'\n                value={state.phone}\n                name={'phone'}\n                onChange={handleChange}\n              />\n              <FormControlLabel\n                control={\n                  <Switch\n                    checked={state.withPhoto}\n                    onChange={handleChange}\n                    name='withPhoto'\n                    color='primary'\n                  />\n                }\n                label={state.withPhoto ? 'Photo' : 'No photo'}\n              />\n              {state.withPhoto && (\n                <TextField\n                  error={state.photo.length > photoUrlMaxLength}\n                  fullWidth={true}\n                  required\n                  label='Link to image'\n                  value={state.photo}\n                  name={'photo'}\n                  onChange={handleChange}\n                  helperText={\n                    state.photo.length > photoUrlMaxLength &&\n                    \"It's not an image url, but, probably, image in base64 form. Please, choose appropriate data.\"\n                  }\n                />\n              )}\n              <br />\n              <Button\n                disabled={isStateChanged()}\n                onClick={clearState}\n                color={'secondary'}\n              >\n                Clear\n              </Button>\n            </form>\n          </Paper>\n        </Grid>\n        <Grid item xs={6}>\n          <Paper className={classes.paper}>{enoughData()}</Paper>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default App;\n","import {ReportHandler} from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}